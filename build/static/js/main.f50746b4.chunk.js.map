{"version":3,"sources":["assets/recycle_waste.svg","components/Navbar.js","components/LandingMain.js","components/AboutUs.js","components/Services.js","components/Feedback.js","components/CTA.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","components_Navbar","react_default","a","createElement","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav_default","Link","LandingMain","render","className","class","src","clean","alt","Component","components_AboutUs","components_Services","components_Feedback","components_CTA","components_Footer","App","LandingMain_LandingMain","Boolean","window","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6YCKzBC,SAAA,WACX,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,GAAG,QAAQC,OAAO,MACtBL,EAAAC,EAAAC,cAACC,EAAAF,EAAOK,MAAR,CAAcC,KAAK,SAAnB,mBACAP,EAAAC,EAAAC,cAACC,EAAAF,EAAOO,OAAR,CAAeC,gBAAc,qBAC7BT,EAAAC,EAAAC,cAACC,EAAAF,EAAOS,SAAR,CAAiBC,GAAG,oBAChBX,EAAAC,EAAAC,cAACU,EAAAX,EAAIY,KAAL,CAAUN,KAAK,SAAf,QACAP,EAAAC,EAAAC,cAACU,EAAAX,EAAIY,KAAL,CAAUN,KAAK,SAAf,SACAP,EAAAC,EAAAC,cAACU,EAAAX,EAAIY,KAAL,CAAUN,KAAK,SAAf,mECTKO,oNACjBC,OAAS,WACL,OACAf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,gCACXhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,mBACXhB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,gBACPjB,EAAAC,EAAAC,cAAA,wCAA+BF,EAAAC,EAAAC,cAAA,WAA/B,qBAAsDF,EAAAC,EAAAC,cAAA,uBACtDF,EAAAC,EAAAC,cAAA,yEAGRF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,mBACXhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,qBACXhB,EAAAC,EAAAC,cAAA,OAAKgB,IAAKC,IAAOC,IAAI,oDAZAC,cCD1BC,SAAA,kBACXtB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aACXhB,EAAAC,EAAAC,cAAA,0BCHGqB,SAAA,kBACXvB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aACXhB,EAAAC,EAAAC,cAAA,0BCHGsB,SAAA,kBACXxB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aACXhB,EAAAC,EAAAC,cAAA,0BCHGuB,SAAA,kBACXzB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aACXhB,EAAAC,EAAAC,cAAA,gCCHGwB,SAAA,kBACX1B,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aACXhB,EAAAC,EAAAC,cAAA,wBCkBGyB,MAdf,WACE,OACE3B,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACbhB,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAC0B,EAAD,MACA5B,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAACsB,EAAD,MACAxB,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAD,QCPcG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASnB,OAAOf,EAAAC,EAAAC,cAACiC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f50746b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/recycle_waste.88685b62.svg\";","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport '../css/Navbar.css'\r\n\r\nexport default ()=>{\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">Eunoia Services</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                <Nav.Link href=\"#home\">About</Nav.Link>\r\n                <Nav.Link href=\"#home\">Contact Us</Nav.Link>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}","import React,{Component} from 'react';\r\nimport clean from '../assets/recycle_waste.svg'\r\nimport '../css/LandingMain.css'\r\n\r\nexport default class LandingMain extends Component{\r\n    render = ()=>{\r\n        return (\r\n        <div className=\"row h-100 align-items-center\">\r\n            <div className=\"col-12 col-md-6\">\r\n                <div class=\"welcome-text\">\r\n                    <h2>Eunoia Services makes your <br/> house management <span>easier</span></h2>\r\n                    <h5>Sit back and relax while we do the heavy lifting for you.</h5>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n                <div className=\"welcome-thumbnail\">\r\n                    <img src={clean} alt=\"Cleaning Agent\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport '../css/AboutUs.css'\r\n\r\nexport default ()=>(\r\n    <section>\r\n        <div className='container'>\r\n            <h3>About Us</h3>\r\n        </div>\r\n    </section>\r\n)","import React from 'react'\r\nimport '../css/Services.css'\r\n\r\nexport default ()=>(\r\n    <section>\r\n        <div className='container'>\r\n            <h3>Services</h3>\r\n        </div>\r\n    </section>\r\n)","import React from 'react'\r\nimport '../css/Feedback.css'\r\n\r\nexport default ()=>(\r\n    <section>\r\n        <div className='container'>\r\n            <h3>Feedback</h3>\r\n        </div>\r\n    </section>\r\n)","import React from 'react'\r\nimport '../css/CTA.css'\r\n\r\nexport default ()=>(\r\n    <section>\r\n        <div className='container'>\r\n            <h3>Call to action</h3>\r\n        </div>\r\n    </section>\r\n)","import React from 'react'\r\nimport '../css/Footer.css'\r\n\r\nexport default ()=>(\r\n    <section>\r\n        <div className='container'>\r\n            <h3>Footer</h3>\r\n        </div>\r\n    </section>\r\n)","import React from 'react';\r\nimport '../css/App.css';\r\nimport Navbar from './Navbar'\r\nimport LandingMain from './LandingMain'\r\nimport AboutUs from './AboutUs'\r\nimport Services from './Services'\r\nimport Feedback from './Feedback'\r\nimport CTA from './CTA'\r\nimport Footer from './Footer'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar/>\r\n      <LandingMain/>\r\n      <AboutUs/>\r\n      <Services/>\r\n      <Feedback/>\r\n      <CTA/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}